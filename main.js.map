{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Services/authentication.service.ts","./src/app/Services/testing.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core'\nimport { from } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable , of } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { Router } from '@angular/router' \n\n// @Injectable({\n//   providedIn: 'root'\n// })\n\nexport interface UserDetails {\n  id: number\n  firstName: string\n  lastName: string\n  email: string\n  telephone: string\n  password: string\n  role: string\n  exp: number\n  iat: number\n}\n\ninterface TokenResponse{\n  token: string\n}\n\nexport interface TokenPayLoad {\n  id: number\n  firstName: string\n  lastName: string\n  email: string\n  password: string\n  role: string\n}\n\n\n@Injectable()\nexport class AuthenticationService {\n  private token: string\n\n  constructor(private http: HttpClient , private router: Router) { }\n\n  private saveToken (token: string): void {\n    localStorage.setItem('userToken', token)\n    this.token = token\n  }\n\n  private getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem('userToken')\n    }\n    return this.token\n  }\n\n  public getUserDetails(): UserDetails {\n    const token = this.getToken()\n    let payload \n    if(token) {\n      payload = token.split('.')[1]\n      // console.log(payload)\n      payload = window.atob(payload)\n      // console.log(payload)\n      return JSON.parse(payload) \n    }else {\n      return null\n    }\n  }\n\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails()\n    if(user) {\n      return user.exp > Date.now() / 1000;\n      // return true;\n    }else {\n      return false\n    }\n  }\n\n  // registration for a publisher\n  public register (user: any): Observable<any> {\n    const base = this.http.post('https://techflare.herokuapp.com/users/publisherRegister',user)\n\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if(data.token){\n          this.saveToken(data.token)\n        }\n        return data\n      })\n    )\n    return request\n  }\n\n\n  // login for a user\n  public login (user: any): Observable<any> {\n    const base = this.http.post('https://techflare.herokuapp.com/users/login',user)\n\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if(data.token){\n          this.saveToken(data.token)\n        }\n        return data\n      })\n    )\n    return request\n  }\n\n  // getting profile details\n  public profile(): Observable<any> {\n    return this.http.get('https://techflare.herokuapp.com/users/profile', {\n      headers: { authorization: `${this.getToken()}`}\n    })\n  }\n\n  // checking is user is an admin\n  public isAdmin () : boolean {\n    const user = this.getUserDetails();\n    if(user.role == \"admin\"){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n    // checking is user is a publisher\n  public isPublisher () : boolean {\n    const user = this.getUserDetails();\n    if(user.role == \"publisher\"){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n    // checking is user is a reader\n  public isReader () : boolean {\n    const user = this.getUserDetails();\n    if(user.role == \"reader\"){\n      return true;\n    }else{\n      return false;\n    }\n  }  \n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestingService {\n\n  constructor(private http: HttpClient , private router: Router ) { }\n\n  \n  show():Observable<any> {\n    console.log(\"vvvvvvvvvvvv\")\n    return this.http.get(\"https://techflare.herokuapp.com\" , {responseType: 'text'})\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TestingService } from './Services/testing.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'test-app';\n  postsDetails: any;\n\n  constructor (private router: Router , private test: TestingService) { }\n  \n  ngOnInit(): void {\n    // console.log(this.auth.isLoggedIn());\n    this.test.show().subscribe(posts => {\n      console.log('aaaaaaaaa')\n      this.postsDetails = posts\n    },\n    err => {\n      console.log(err)\n    })\n  }\n}\n","<p>{{postsDetails}}</p>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AppComponent } from './app.component';\n\n// Services\nimport { TestingService} from './Services/testing.service';\nimport { AuthenticationService } from './Services/authentication.service'\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n\n  ],\n  providers: [TestingService , AuthenticationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}