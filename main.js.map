{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Components/add-admin/add-admin.component.ts","./src/app/Components/add-admin/add-admin.component.html","./src/app/Components/dashboard/dashboard.component.ts","./src/app/Components/dashboard/dashboard.component.html","./src/app/Components/login/login.component.ts","./src/app/Components/login/login.component.html","./src/app/Components/manage-admins/manage-admins.component.ts","./src/app/Components/manage-admins/manage-admins.component.html","./src/app/Components/publisher-list/publisher-list.component.ts","./src/app/Components/publisher-list/publisher-list.component.html","./src/app/Components/publisher-requests/publisher-requests.component.ts","./src/app/Components/publisher-requests/publisher-requests.component.html","./src/app/Components/register/register.component.ts","./src/app/Components/register/register.component.html","./src/app/Services/authentication.service.ts","./src/app/Services/testing.service.ts","./src/app/Services/validations.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core'\nimport { from } from 'rxjs'\nimport { AuthenticationService , TokenPayLoad } from '../../Services/authentication.service'\nimport { Router } from '@angular/router'\n\n\nimport { ValidationsService } from 'src/app/Services/validations.service'\nimport { ToastrService } from 'ngx-toastr'; \n\n@Component({\n  selector: 'app-add-admin',\n  templateUrl: './add-admin.component.html',\n  styleUrls: ['./add-admin.component.css']\n})\nexport class AddAdminComponent implements OnInit {\n  firstName:string\n  lastName:string\n  email:string\n  password:string\n  // role:string\n  role:string\n  approved:string\n  constructor(public auth: AuthenticationService , private router: Router, private val:ValidationsService,private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n  }\n  addAdmin() {\n    const credentials= {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email:this.email,\n      password:this.password,\n      role: 'admin',\n      approved: 'true'\n    }\n// console.log(credentials)\n\n\n    if(!this.val.validatingRegister(credentials)){\n      console.log('fill all')\n      this.toastr.error(\"*** Please fill all the fields ***\",\"\",{\n        timeOut: 3000,\n        positionClass: 'toast-top-full-width',\n         \n      });\n      return false\n    }\n\n    if(!this.val.validatingEmail(credentials.email)){\n      console.log('invalid email')\n      this.toastr.error(\"*** Please enter valid Email address ***\",\"\",{\n        timeOut: 3000,\n        positionClass: 'toast-top-full-width',\n         \n      });\n      \n      return false\n    }\n\n    if(!this.val.validatingPassword(credentials.password)){\n      this.toastr.error(\"*** 6-10 characters should be in your password ***\",\"\",{\n        timeOut: 3000,\n        positionClass: 'toast-top-full-width',\n         \n      });\n      return false\n    }\n\n\n    this.auth.adminRegister(credentials).subscribe(user=> {\n      console.log(user + \"vvvvvvvvv4444444\")\n      \n      if(user.success){\n        this.router.navigateByUrl('/manageAdmins')\n        this.toastr.success(\"Admin added successfully \",\"\",{\n          timeOut: 2000,\n          // positionClass: 'toast-top-full-width'\n        });\n        // alert('registered successfully')\n      }else{\n        // this.flash.show(user.message, {cssClass:'alert-danger',timeout:3000})\n        this.toastr.error(user.message,\"\",{\n          timeOut: 2000,\n          \n        });\n        console.log(user.message)\n      }\n    })\n  }\n\n}\n","<app-dashboard></app-dashboard>\n<div class=\"container forget-password\">\n            <div class=\"row\">\n                <div class=\"col-md-12 col-md-offset-4\">\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-body\">\n                            <div class=\"text-center\">\n                                <img src=\"assets/images/addAdmin.png\" alt=\"car-key\" >\n                                <h2 class=\"text-center\">Admin Registration</h2>\n                                <!-- <p>You can reset your password here.</p> -->\n                                <form id=\"register-form\" role=\"form\" autocomplete=\"off\" class=\"form\" (submit)=\"addAdmin()\" >\n                                    <!-- <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <select class=\"form-control\" id=\"sel1\">\n                                                <option selected=\"true\" disabled=\"disabled\">Please Select Security Question</option>\n                                                <option>Which is your favorite movie?</option>\n                                                <option>What is your pet's name?</option>\n                                                <option>What is the name of your village?</option>\n                                            </select>\n                                        </div>\n                                    </div> -->\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope color-blue\"></i></span>\n                                            <input id=\"forgetAnswer\" name=\"firstName\" placeholder=\"First Name\" [(ngModel)]=\"firstName\" class=\"form-control\"  type=\"text\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope color-blue\"></i></span>\n                                            <input id=\"forgetAnswer\" placeholder=\"Last Name\" name=\"lastName\"  [(ngModel)]=\"lastName\" class=\"form-control\"  type=\"text\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope color-blue\"></i></span>\n                                            <input id=\"forgetAnswer\"  placeholder=\"E mail address\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\"  type=\"text\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <div class=\"input-group\">\n                                            <span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-envelope color-blue\"></i></span>\n                                            <input id=\"forgetAnswer\"  placeholder=\"Password\"  name=\"password\" [(ngModel)]=\"password\" class=\"form-control\"  type=\"text\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <input name=\"btnForget\" class=\"btn btn-lg btn-primary btn-block btnForget\"  type=\"submit\">\n                                    </div>\n\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../Services/authentication.service'\nimport { Router } from '@angular/router'\nimport { ToastrService } from 'ngx-toastr'; \n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(public router: Router, private toastr: ToastrService, public auth:AuthenticationService) { }\n\n  ngOnInit(): void {\n  }\n\n  logout(){\n    localStorage.removeItem('userToken'); \n    this.router.navigateByUrl('/');\n    this.toastr.info(\"Good Bye \",\"\",{\n      timeOut: 2000,\n    });\n  }\n\n}\n","\n\n  <!--nav bar-->\n  <nav class=\"navbar navbar-expand-md bg-light navbar-light\">\n    <button class=\"navbar-toggler ml-auto mb-2 bg-light\" type=\"button\"\n    data-toggle=\"collapse\" data-target=\"#myNavbar\">\n    <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\n      \n     <div class=\"row\">\n  \n      <!--side-navbar-->\n      <div class=\"col-lg-3 col-xl-2 col-md-4 sidebar fixed-top p-0\">\n  \n        <div class=\"bottom-border pb-0 pt-3 text-center\"> \n          <img src=\"assets/images/profile.png\" >\n          <a  class=\"navbar-brand d-block mx-auto text-center pt-3 pb-1\" style=\"color:white\">Welcome {{auth.getUserDetails()?.firstName.toUpperCase()}}</a>\n        </div> \n  \n        <ul class=\"navbar-nav flex-column mt-0 \"> \n\n            <li  class=\"nav-item\" ><a   class=\"nav-link text-white pl-4 pt-3 pb-3 sidebar-link\" >\n                <i class=\"fas fa-user fa-lg mr-3\"></i>My Profile\n              </a></li>\n  \n          <!-- admin dashboard Components-->\n  \n          <li class=\"nav-item\" *ngIf=\"auth.isAdmin()\"><a [routerLink]=\"['/publisherRequests']\" class=\"nav-link text-white pl-4 pt-3 pb-3 sidebar-link\">\n            <i class=\"fas fa-users  fa-lg mr-3\"></i>Publisher Requests\n          </a></li>\n\n           <li class=\"nav-item\" *ngIf=\"auth.isAdmin()\"><a   class=\"nav-link text-white pl-4 pt-3 pb-3 sidebar-link\">\n            <i class=\"fas fa-users  fa-lg mr-3\"></i>Chapter Requests\n          </a></li>\n\n          <li class=\"nav-item\" *ngIf=\"auth.isAdmin()\"><a  [routerLink]=\"['/manageAdmins']\" class=\"nav-link text-white pl-4 pt-3 pb-3 sidebar-link\">\n            <i class=\"fas fa-paste fa-lg mr-3\"></i>Manage Admins\n          </a></li>\n          <li class=\"nav-item\" *ngIf=\"auth.isAdmin()\"><a [routerLink]=\"['/publisherList']\" class=\"nav-link text-white pl-4 pt-3 pb-3 sidebar-link\">\n            <i class=\"fas fa-paste fa-lg mr-3\"></i>Publisher List\n          </a></li>\n          <li class=\"nav-item\" *ngIf=\"auth.isAdmin()\"><a [routerLink]=\"['/viewCategories']\"  class=\"nav-link text-white pl-4 pt-3 pb-3 sidebar-link\">\n            <i class=\"fas fa-paste fa-lg mr-3\"></i>Payments\n          </a></li>\n\n           <!--publisher dashboard components--> \n\n           <li class=\"nav-item\" *ngIf=\"auth.isPublisher()\"><a [routerLink]=\"['/ViewDocs']\" class=\"nav-link text-white pl-4 pt-3 pb-3 sidebar-link\">\n            <i class=\"fas fa-file-alt fa-lg mr-3\"></i>Write New\n          </a></li> \n\n          <li class=\"nav-item\" *ngIf=\"auth.isPublisher()\"><a [routerLink]=\"['/annotations']\" class=\"nav-link text-white pl-4 pt-3 pb-3 sidebar-link\">\n            <i class=\"fas fa-pencil-alt fa-lg mr-3\"></i>My Books\n          </a></li> \n\n          <li class=\"nav-item\" *ngIf=\"auth.isPublisher()\"><a [routerLink]=\"['/ClintViewCategory']\" class=\"nav-link text-white pl-4 pt-3 pb-3 sidebar-link\">\n            <i class=\"fas fa-copy fa-lg mr-3\"></i>Pending Chapters\n          </a></li> \n\n          <li class=\"nav-item\" *ngIf=\"auth.isPublisher()\"><a [routerLink]=\"['/UplordPhoto']\" class=\"nav-link text-white pl-4 pt-3 pb-3 sidebar-link\">\n            <i class=\"fas fa-copy fa-lg mr-3\"></i>My Earnings\n          </a></li> \n\n           <!--reader dashboard components--> \n\n           <li class=\"nav-item\" *ngIf=\"auth.isReader()\"><a [routerLink]=\"['/ViewDocs']\" class=\"nav-link text-white pl-4 pt-3 pb-3 sidebar-link\">\n            <i class=\"fas fa-file-alt fa-lg mr-3\"></i>My Library\n          </a></li> \n\n          <li class=\"nav-item\" *ngIf=\"auth.isReader()\"><a [routerLink]=\"['/annotations']\" class=\"nav-link text-white pl-4 pt-3 pb-3 sidebar-link\">\n            <i class=\"fas fa-pencil-alt fa-lg mr-3\"></i>Manage Coins\n          </a></li> \n\n          <li class=\"nav-item\" *ngIf=\"auth.isReader()\"><a [routerLink]=\"['/ClintViewCategory']\" class=\"nav-link text-white pl-4 pt-3 pb-3 sidebar-link\">\n            <i class=\"fas fa-copy fa-lg mr-3\"></i>My Payments\n          </a></li> \n\n\n  \n  \n        </ul>\n      </div>\n      <!--end of side-navbar-->\n  \n      <!--top-navbar-->\n      <div class=\"col-xl-10 col-lg-9 col-md-8 bg-white py-2 ml-auto fixed-top top-bar\">\n       <div class=\"row align-items-center\">\n  \n         <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-3 col-xs-3\">\n           <img src=\"assets/images/logo.jpg\">\n         </div>\n     \n         <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-9 col-xs-9 text-right \">\n         \n          \n          \n         <ul class=\"navbar-nav justify-content-end align-items-center \" >\n  \n          \n          <li class=\"nav-item \"> <a [routerLink]=\"['/profile']\"><i class=\"fas fa-bell fa-2x ml-3\" id=\"top-icon\"></i></a></li>\n          <li class=\"nav-item \"> <a href=\"#\" data-toggle=\"modal\" data-target=\"#sign-out\"><i class=\"fas fa-sign-out-alt fa-2x ml-3\" id=\"top-icon\"></i></a></li>\n         \n        </ul>\n          \n        </div>\n       </div>\n  \n      </div>\n      <!--end of top-navbar-->\n  \n    </div> \n  </div>\n  \n  </nav>\n  \n  <!--end of navbar-->\n  \n      <!--model-->\n      <div class=\"modal fade\" id=\"sign-out\" role=\"dialog\">\n        <div class=\"modal-dialog modal-lg\">\n          \n          <div class=\"modal-content\">\n            \n            <div class=\"modal-header\">\n              <h4 class=\"modal-title\">Do You Want To Leave Document Management System? </h4>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n              \n            </div>\n          \n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\" (click)=\"logout()\">Sign-out</button>\n              <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Stay-here</button>\n              \n            </div>\n  \n          </div>\n        </div>\n      </div>\n      <!--end of model-->\n","import { Component, OnInit } from '@angular/core'\n\nimport { Router } from '@angular/router'\nimport { from } from 'rxjs'\nimport { AuthenticationService  } from '../../Services/authentication.service'\n\nimport { ValidationsService } from '../../Services/validations.service'\n\nimport { ToastrService } from 'ngx-toastr'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  \n  email: string\n  password: string\n  \n\n  constructor(private val:ValidationsService,public auth: AuthenticationService , private router: Router,private toastr: ToastrService) { }\n\n\n\n\n  login() {\n\n    const credentials = {\n      email:this.email,\n      password:this.password\n    }\n\n    \n\n    if(!this.val.validatingLogin(credentials)){\n      console.log('fill all')\n      this.toastr.error(\"*** Please fill all the fields ***\",\"\",{\n        timeOut: 3000,\n        positionClass: 'toast-top-full-width',\n         \n      });\n\n      return false\n    }\n    if(!this.val.validatingEmail(credentials.email)){\n      console.log('invalid email')\n      this.toastr.error(\"*** Please enter valid Email address ***\",\"\",{\n        timeOut: 3000,\n        positionClass: 'toast-top-full-width',\n         \n      });\n      \n      return false\n    }\n    // if(!this.val.validatingPassword(credentials.password)){\n    //   this.flash.show('*** 6 - 10 characters should be in your password ***', {cssClass:'alert-danger',timeout:3000})\n    //   console.log('invalid password')\n    //   return false\n    // }\n\n    console.log(this.email+' & '+this.password)\n    \n    // this.auth.login(credentials).subscribe(\n    //   (user) => {\n    //     this.router.navigateByUrl('/dashboard')\n        \n    //   },\n    //   err => {\n    //     this.toastr.error(\"*** Sign in failed ***\",\"\",{\n    //       timeOut: 2000,\n    //     });\n    //     console.error(err);\n    //     // alert('*** Sign in failed ***')\n        \n    //   }\n    // )\n\n\n    this.auth.login(credentials).subscribe(user =>{\n      if(user.success){\n        this.router.navigateByUrl('/dashboard')\n        console.log(user.message)\n      }\n      else{\n        this.toastr.error(\"*** Please check your password again ***\",\"\",{\n          timeOut: 3000,\n          positionClass: 'toast-top-full-width'\n        });\n        console.log(user.message)\n      }\n    })\n\n    \n  }\n\n\n  ngOnInit(): void {\n  \n  }\n\n  \n\n}\n","\n\n<body>\n    <section class=\"form my-4 mx-5\">\n        <div class=\"container\">\n            <div class=\"row no-gutters\">\n                <div class=\"col-lg-6\">\n                    <img src=\"assets/images/login.jpg\" alt=\"hello\" class=\"img-fluid\">\n                </div>\n                <div class=\"col-lg-6 px-5 pt-5\">\n                    <form (submit)=\"login()\">\n\n                        <h2 class=\"heading1\">Sign In</h2>\n                        <div class=\"form-row\">\n                            \n                            <div class=\"col-lg-9\">\n                                <input type=\"email\"  class=\"form-control\" \n                                    placeholder=\"E mail address\" [(ngModel)]=\"email\" name=\"email\" />\n                            </div>\n\n                            <div class=\"col-lg-9\">\n                                <input type=\"password\"  class=\"form-control\" \n                                    placeholder=\"Password\"  name=\"password\" [(ngModel)]=\"password\" >\n                            </div>\n                            \n\n                             <div class=\"col-lg-9\">\n                                <button type=\"submit\" class=\"btn btn-dark btn-block \">Log in</button>\n                             </div>\n                    \n                            \n                            <div class=\"col-lg-9\">\n                                <p class=\"small-text\">Don't have an Account? <a [routerLink]=\"['/register']\"><b>Sign Up</b></a></p>\n\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </section>\n</body>\n\n<!-- </html> -->","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthenticationService } from 'src/app/Services/authentication.service';\n\n@Component({\n  selector: 'app-manage-admins',\n  templateUrl: './manage-admins.component.html',\n  styleUrls: ['./manage-admins.component.css']\n})\nexport class ManageAdminsComponent implements OnInit {\n  adminDetails: any;\n  userId: any;\n\n  constructor(public auth: AuthenticationService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.auth.showAdmins().subscribe(posts => {\n      this.adminDetails = posts;\n      console.log( this.adminDetails)\n    },\n    err => {\n      console.log(err)\n    })\n  }\n\n  deleteAdmin(userId:any){\n    this.userId = userId\n    this.auth.deleteAdmin(userId).subscribe(posts => {\n      console.log(this.userId)\n      this.ngOnInit()\n\n    })\n  }\n\n}\n","<app-dashboard></app-dashboard>\n\n<div class=\"container\" margin-left=\"300px\">\n\n    <div class=\"col-xl-10 col-lg-9 col-md-8 p-0 ml-auto\">\n\n        <div class=\"row\">\n\n            <div class=\"col-md-12 m-5 mx-auto\">\n                <h1 style=\"text-align: center;\">Admin List</h1>\n                <table class=\"table bg-light   mt-4\">\n\n                    <thead class=\"thead-light\">\n\n                        <tr class=\"text-muted\">\n\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>E-mail</th>\n                            <th></th>\n                       \n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let s of adminDetails\"> \n                            <td>{{s.firstName}}</td>\n                            <td>{{s.lastName}}</td>\n                            <td>{{s.email}}</td>\n                            <td><button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteAdmin(s._id)\"><i class=\"fas fa-user-times\"></i>  Delete Admin</button></td>\n                           \n                        </tr>\n                        \n                        \n                       \n        \n                    </tbody>\n                     \n                        \n                  \n                 \n                </table>\n                <table class=\"table bg-blue   mt-4\">\n                    <tbody>\n                        <tr class=\"text-muted\" style=\"text-align: center;\">\n                            \n                            <th><a [routerLink]=\"['/addAdmin']\"><button type=\"button\" class=\"btn btn-outline-info\" ><i class=\"fas fa-user-plus\"></i>   New Admin</button></a></th>\n                            \n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- <div class=\"modal fade\" id=\"remove\" role=\"dialog\">\n    <div class=\"modal-dialog modal-lg\">\n      \n        <div class=\"modal-content\">\n        \n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Do You Want To Remove This Publisher ?</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n          \n            </div>\n  \n     \n      \n            <div class=\"modal-footer\">\n        \n                 <button type=\"button\" class=\"btn btn-outline-success\" data-dismiss=\"modal\" (click)=\"deletePublisher(this.s._id)\">Yes, I Do</button>\n                 <button type=\"button\" class=\"btn btn-outline-danger\" data-dismiss=\"modal\">Discard</button>\n          \n            </div>\n  \n      \n        </div>\n    </div>\n</div> -->","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/Services/authentication.service';\n\n@Component({\n  selector: 'app-publisher-list',\n  templateUrl: './publisher-list.component.html',\n  styleUrls: ['./publisher-list.component.css']\n})\nexport class PublisherListComponent implements OnInit {\n  publishersDetails: any;\n  userId: any;\n\n  constructor(public auth: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.auth.showpublishers().subscribe(posts => {\n      this.publishersDetails = posts;\n      console.log( this.publishersDetails)\n    },\n    err => {\n      console.log(err)\n    })\n  }\n\n  deletePublisher(userId:any){\n    this.userId = userId\n    this.auth.deletePublisher(userId).subscribe(posts => {\n      console.log(this.userId)\n      this.ngOnInit()\n\n    })\n  }\n\n}\n","<app-dashboard></app-dashboard>\n\n<div class=\"container\" margin-left=\"300px\">\n\n    <div class=\"col-xl-10 col-lg-9 col-md-8 p-0 ml-auto\">\n\n        <div class=\"row\">\n\n            <div class=\"col-md-12 m-5 mx-auto\">\n                <h1 style=\"text-align: center;\">Publisher List</h1>\n                <table class=\"table bg-light   mt-4\">\n\n                    <thead class=\"thead-light\">\n\n                        <tr class=\"text-muted\">\n\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>E-mail</th>\n                            <th></th>\n                       \n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let s of publishersDetails\"> \n                            <td>{{s.firstName}}</td>\n                            <td>{{s.lastName}}</td>\n                            <td>{{s.email}}</td>\n                            <td><button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deletePublisher(this.s._id)\"><i class=\"fas fa-user-times\"></i>  Delete Publisher</button></td>\n                           \n                        </tr>\n                        \n                       \n        \n                    </tbody>\n                     \n                        \n                  \n                 \n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- <div class=\"modal fade\" id=\"remove\" role=\"dialog\">\n    <div class=\"modal-dialog modal-lg\">\n      \n        <div class=\"modal-content\">\n        \n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Do You Want To Remove This Publisher ?</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n          \n            </div>\n  \n     \n      \n            <div class=\"modal-footer\">\n        \n                 <button type=\"button\" class=\"btn btn-outline-success\" data-dismiss=\"modal\" (click)=\"deletePublisher(this.s._id)\">Yes, I Do</button>\n                 <button type=\"button\" class=\"btn btn-outline-danger\" data-dismiss=\"modal\">Discard</button>\n          \n            </div>\n  \n      \n        </div>\n    </div>\n</div> -->","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthenticationService } from 'src/app/Services/authentication.service';\n\n@Component({\n  selector: 'app-publisher-requests',\n  templateUrl: './publisher-requests.component.html',\n  styleUrls: ['./publisher-requests.component.css']\n})\nexport class PublisherRequestsComponent implements OnInit {\n  publishersDetails: any;\n  userId: any;\n  approved: boolean;\n\n  constructor(public auth: AuthenticationService, private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.auth.showpublisherReqs().subscribe(posts => {\n      this.publishersDetails = posts;\n      console.log( this.publishersDetails)\n    },\n    err => {\n      console.log(err)\n    })\n  }\n\n  removePublisher(userId:any){\n    this.userId = userId\n    this.auth.deletePublisher(userId).subscribe(posts => {\n      console.log(this.userId)\n      this.ngOnInit()\n\n    })\n  }\n\n  approve(userId:any){\n    this.userId = userId\n    this.approved= true\n    this.auth.approvePublisher(this.userId,this.approved).subscribe(\n      ()=> {\n        console.log(this.approved)\n        this.toastr.success(\"Post Approved\",\"\",{\n          timeOut:2000\n          \n        })\n        \n      },err=> {\n        console.error(err)\n      }\n    )\n  }\n\n}\n","<app-dashboard></app-dashboard>\n\n<div class=\"container\" margin-left=\"300px\">\n\n    <div class=\"col-xl-10 col-lg-9 col-md-8 p-0 ml-auto\">\n\n        <div class=\"row\">\n\n            <div class=\"col-md-12 m-5 mx-auto\">\n                <h1 style=\"text-align: center;\">Publisher Requests</h1>\n                <table class=\"table bg-light  mt-4\">\n\n                    <thead class=\"thead-light\">\n\n                        <tr class=\"text-muted\">\n\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>E-mail</th>\n                            <th></th>\n                            <th></th>\n                            <!-- <th>Email</th>\n                            <th>Telephone</th> -->\n                            <!-- <th>User Status</th>\n                            <th>User Edit</th>\n                            <th>User Delete</th> -->\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let s of publishersDetails\"> \n                            <td>{{s.firstName}}</td>\n                            <td>{{s.lastName}}</td>\n                            <td>{{s.email}}</td>\n                            <td><button type=\"button\" class=\"btn btn-outline-success\" (click)=\"approve(s._id)\" ><i class=\"fas fa-check\"></i>  Accept</button></td>\n                            <td><button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deletePublisher(s._id)\"><i class=\"fas fa-times\"></i>  Reject</button></td>\n                            <!-- <td><button type=\"button\" class=\"btn btn-outline-info\" (click)=\"viewAd(s._id)\">View Ad</button></td> -->\n                            <!-- <td>{{s.email}}</td>\n                            <td>{{s.telephone}}</td> -->\n                            <!-- <td *ngIf=\"this.auth.getStatus(s); else elseBlock\"><i class=\"fas fa-toggle-on fa-lg\"></i></td>\n                            <ng-template #elseBlock>\n                             <td><i class=\"fas fa-toggle-off fa-lg\"></i></td>   \n                            </ng-template>\n                            <td><button (click)=\"onselectIDforEdit(s)\"  class=\"p-0\"><i class=\"fas fa-edit fa-lg text-dark \"></i></button></td>\n                            <td><button (click)=\"onselectIDforDelete(s)\"  class=\"p-0\"><i class=\"fas fa-trash fa-lg text-dark\"></i></button></td> -->\n                        </tr>\n                        \n                       \n        \n                    </tbody>\n                     \n                        \n                  \n                 \n                </table>\n            </div>\n        </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core'\nimport { from } from 'rxjs'\nimport { AuthenticationService , TokenPayLoad } from '../../Services/authentication.service'\nimport { Router } from '@angular/router'\n\n\nimport { ValidationsService } from 'src/app/Services/validations.service'\nimport { ToastrService } from 'ngx-toastr'; \n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  firstName:string\n  lastName:string\n  email:string\n  password:string\n  // role:string\n  role = [\n    {id: 1, name: \"reader\"},\n    {id: 2, name: \"publisher\"}\n    \n  \n ];\n selectedValue = \"1\";\n\n\n  constructor(public auth: AuthenticationService , private router: Router, private val:ValidationsService,private toastr: ToastrService) { }\n\n  register() {\n    const credentials= {\n      firstName: this.firstName,\n      lastName: this.lastName,\n      email:this.email,\n      password:this.password,\n      role: this.selectedValue\n    }\n// console.log(credentials)\n\n\n    if(!this.val.validatingRegister(credentials)){\n      console.log('fill all')\n      this.toastr.error(\"*** Please fill all the fields ***\",\"\",{\n        timeOut: 3000,\n        positionClass: 'toast-top-full-width',\n         \n      });\n      return false\n    }\n\n    if(!this.val.validatingEmail(credentials.email)){\n      console.log('invalid email')\n      this.toastr.error(\"*** Please enter valid Email address ***\",\"\",{\n        timeOut: 3000,\n        positionClass: 'toast-top-full-width',\n         \n      });\n      \n      return false\n    }\n\n    if(!this.val.validatingPassword(credentials.password)){\n      this.toastr.error(\"*** 6-10 characters should be in your password ***\",\"\",{\n        timeOut: 3000,\n        positionClass: 'toast-top-full-width',\n         \n      });\n      return false\n    }\n\n    // if(!this.val.validatingTelephone(credentials.telephone)){\n    //   console.log(credentials.telephone)\n    //   console.log('invalid telephone number')\n    //   this.toastr.error(\"*** Please enter valid telephone number ***\",\"\",{\n    //     timeOut: 3000,\n    //     positionClass: 'toast-top-full-width',\n         \n    //   });\n      \n    //   return false\n    // }\n\n\n\n    this.auth.register(credentials).subscribe(user=> {\n      console.log(user + \"vvvvvvvvvvvvvvvv\")\n      \n      if(user.success){\n        this.router.navigateByUrl('/login')\n        this.toastr.success(\"registered successfully \",\"\",{\n          timeOut: 2000,\n          // positionClass: 'toast-top-full-width'\n        });\n        // alert('registered successfully')\n      }else{\n        // this.flash.show(user.message, {cssClass:'alert-danger',timeout:3000})\n        this.toastr.error(user.message,\"\",{\n          timeOut: 2000,\n          \n        });\n        console.log(user.message)\n      }\n    })\n  }\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<body>\n    <section class=\"form my-4 mx-5\">\n        <div class=\"container\">\n            <div class=\"row no-gutters\">\n                <div class=\"col-lg-6\">\n                    <img src=\"assets/images/register.jpg\" alt=\"hello\" class=\"img-fluid\">\n                </div>\n                <div class=\"col-lg-6 px-5 pt-5\">\n                    <form (submit)=\"register()\">\n\n                        <h2 class=\"heading1\">Sign Up</h2>\n                        <div class=\"form-row\">\n                            <div class=\"col-lg-9\">\n                                <input type=\"text\" class=\"form-control\" \n                                    placeholder=\"First Name\"  name=\"firstName\" [(ngModel)]=\"firstName\">\n                            </div>\n\n                            <div class=\"col-lg-9\">\n                                <input type=\"text\"  class=\"form-control\"  \n                                    placeholder=\"Last Name\" name=\"lastName\"  [(ngModel)]=\"lastName\">\n                            </div>\n\n                            <div class=\"col-lg-9\">\n                                <input type=\"email\"  class=\"form-control\" \n                                    placeholder=\"E mail address\" [(ngModel)]=\"email\" name=\"email\" />\n                            </div>\n\n                            <div class=\"col-lg-9\">\n                                <input type=\"password\"  class=\"form-control\" \n                                    placeholder=\"Password\"  name=\"password\" [(ngModel)]=\"password\" >\n                            </div>\n                            <div class=\"col-lg-9\">\n                                <label for=\"role\"> Sign up as a: </label>\n                                <select class=\"form-select form-control\"   [(ngModel)] =\"selectedValue\" name=\"role\">\n                                    \n                                    <option *ngFor=\"let role of role\" [value]=\"role.name\">{{role.name}}</option>\n                                </select>\n                            </div>\n\n                             <div class=\"col-lg-9\">\n                                <button type=\"submit\" class=\"btn btn-dark btn-block \">Register</button>\n                             </div>\n                       \n                            <div class=\"col-lg-9\">\n                                <hr>\n                                <a href=\"#\" class=\"fa fa-facebook\"></a>\n                            </div>\n                            \n                            <div class=\"col-lg-9\">\n                                <p>Already have an account ? <a [routerLink]=\"['/login']\"><b>Sign in</b></a></p>\n\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </section>\n</body>\n\n<!-- </html> -->","import { Injectable } from '@angular/core'\nimport { from } from 'rxjs'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable , of } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { Router } from '@angular/router' \n\n// @Injectable({\n//   providedIn: 'root'\n// })\n\nexport interface UserDetails {\n  id: number\n  firstName: string\n  lastName: string\n  email: string\n  telephone: string\n  password: string\n  role: string\n  exp: number\n  iat: number\n}\n\ninterface TokenResponse{\n  token: string\n}\n\nexport interface TokenPayLoad {\n  id: number\n  firstName: string\n  lastName: string\n  email: string\n  password: string\n  role: string\n}\n\n\n@Injectable()\nexport class AuthenticationService {\n  private token: string\n\n  constructor(private http: HttpClient , private router: Router) { }\n\n  private saveToken (token: string): void {\n    localStorage.setItem('userToken', token)\n    this.token = token\n  }\n\n  private getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem('userToken')\n    }\n    return this.token\n  }\n\n  public getUserDetails(): UserDetails {\n    const token = this.getToken()\n    let payload \n    if(token) {\n      payload = token.split('.')[1]\n      // console.log(payload)\n      payload = window.atob(payload)\n      // console.log(payload)\n      return JSON.parse(payload) \n    }else {\n      return null\n    }\n  }\n\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails()\n    if(user) {\n      return user.exp > Date.now() / 1000;\n      // return true;\n    }else {\n      return false\n    }\n  }\n\n  // registration for publisher and reader\n  public register (user: any): Observable<any> {\n    console.log(\"bbbbbbbbbbbbbbbbbbbb\")\n    const base = this.http.post('https://techflare.herokuapp.com/users/register',user)\n\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if(data.token){\n          this.saveToken(data.token)\n        }\n        return data\n      })\n    )\n    return request\n  }\n\n  // registration for admin\n  public adminRegister (user: any): Observable<any> {\n    console.log(\"bbbbbbbbbbb5555555\")\n    const base = this.http.post('https://techflare.herokuapp.com/users/adminRegister',user)\n\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if(data.token){\n          this.saveToken(data.token)\n        }\n        return data\n      })\n    )\n    return request\n  }\n\n  // login for a user\n  public login (user: any): Observable<any> {\n    const base = this.http.post('https://techflare.herokuapp.com/users/login',user)\n\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if(data.token){\n          this.saveToken(data.token)\n        }\n        return data\n      })\n    )\n    return request\n  }\n\n  // getting profile details\n  public profile(): Observable<any> {\n    return this.http.get('https://techflare.herokuapp.com/users/profile', {\n      headers: { authorization: `${this.getToken()}`}\n    })\n  }\n\n  // checking is user is an admin\n  public isAdmin () : boolean {\n    const user = this.getUserDetails();\n    if(user.role == \"admin\"){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n    // checking is user is a publisher\n  public isPublisher () : boolean {\n    const user = this.getUserDetails();\n    if(user.role == \"publisher\"){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n    // checking is user is a reader\n  public isReader () : boolean {\n    const user = this.getUserDetails();\n    if(user.role == \"reader\"){\n      return true;\n    }else{\n      return false;\n    }\n  }  \n\n    // getting publisher requests\n    showpublishers():Observable<any> {\n      console.log(\"vvvvvvvvvvvv\")\n      return this.http.get('https://techflare.herokuapp.com/users/approvedPublishers')\n    }\n  \n    // getting all the publisher requests\n    showpublisherReqs():Observable<any> {\n      console.log(\"vvvvvvvvvvvv\")\n      return this.http.get('https://techflare.herokuapp.com/users/getApproved')\n    }\n\n  // remove publishers or reject publisher requests\n  deletePublisher(userId:any):Observable<any> {\n    console.log(userId+\" ssssssssss\")\n    return this.http.delete('https://techflare.herokuapp.com/users/remove/'+userId)\n  }\n\n  // approve publisher request\n  approvePublisher(userId:any,approve:any):Observable<any> {\n    const dataArr=[]\n    dataArr.push(approve)\n    console.log(dataArr+' eeeeee')\n    return this.http.patch('https://techflare.herokuapp.com/users/approvePublisher/'+userId,dataArr)\n  }\n\n  // getting admin list\n  showAdmins():Observable<any> {\n    console.log(\"vvvvvvvvvvvv\")\n    return this.http.get('https://techflare.herokuapp.com/users/getAdmins')\n  }\n\n  // remove admins\n  deleteAdmin(userId:any):Observable<any> {\n    console.log(userId+\" ssssssssss\")\n    return this.http.delete('https://techflare.herokuapp.com/users/remove/'+userId)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestingService {\n\n  constructor(private http: HttpClient , private router: Router ) { }\n\n  \n  show():Observable<any> {\n    console.log(\"vvvvvvvvvvvv\")\n\n    return this.http.get(\"https://techflare.herokuapp.com\" , {responseType: 'text'})\n\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationsService {\n\n  constructor() { }\n\n  validatingRegister(credentials){\n    \n    if (credentials.firstName==undefined || credentials.lastName==undefined || credentials.email==undefined || credentials.password==undefined ){\n      return false\n    }else {\n      return true\n    }\n  }\n\n  validatingLogin(credentials){\n    \n    if (credentials.email==undefined || credentials.password==undefined){\n      return false\n    }else {\n      return true\n    }\n  }\n\n  validatingEmail(email){\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  validatingPassword(password){\n    const re1 = /^\\S{6,10}$/;\n    return re1.test(password)\n  }\n\n  validatingTelephone(telephone){\n    const re = /^(?:0|94|\\+94|0094)?(?:(11|21|23|24|25|26|27|31|32|33|34|35|36|37|38|41|45|47|51|52|54|55|57|63|65|66|67|81|91)(0|2|3|4|5|7|9)|7(0|1|2|4|5|6|7|8)\\d)\\d{6}$/;\n    return re.test(telephone)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './Components/dashboard/dashboard.component';\nimport { LoginComponent } from './Components/login/login.component';\nimport { RegisterComponent } from './Components/register/register.component';\nimport { PublisherListComponent } from './Components/publisher-list/publisher-list.component';\nimport { PublisherRequestsComponent } from './Components/publisher-requests/publisher-requests.component';\nimport { ManageAdminsComponent } from './Components/manage-admins/manage-admins.component';\nimport { AddAdminComponent } from './Components/add-admin/add-admin.component';\n\n\nconst routes: Routes = [\n  { path: 'login' , component:LoginComponent},\n  { path: 'register' , component:RegisterComponent},\n  { path: 'dashboard' , component:DashboardComponent},\n  { path: 'publisherList' , component:PublisherListComponent},\n  { path: 'publisherRequests' , component:PublisherRequestsComponent},\n  { path: 'manageAdmins' , component:ManageAdminsComponent},\n  { path: 'addAdmin' , component:AddAdminComponent} \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TestingService } from './Services/testing.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Fantacy Reading';\n  // postsDetails: any;\n\n  // constructor (private router: Router , private test: TestingService) { }\n  \n  \n  // ngOnInit(): void {\n  //   // console.log(this.auth.isLoggedIn());\n  //   this.test.show().subscribe(posts => {\n  //     console.log('aaaaaaaaa')\n  //     this.postsDetails = posts\n  //   },\n  //   err => {\n  //     console.log(err)\n  //   })\n  // }\n}\n","<!-- <p>{{postsDetails}}</p> -->\n<router-outlet> </router-outlet>\n","import { BrowserModule} from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppComponent } from './app.component';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\n// Services\nimport { TestingService } from './Services/testing.service';\nimport { AuthenticationService } from './Services/authentication.service';\nimport { ValidationsService } from './Services/validations.service'\n\n// components\nimport { LoginComponent } from './Components/login/login.component';\nimport { RegisterComponent } from './Components/register/register.component';\nimport { DashboardComponent } from './Components/dashboard/dashboard.component';\nimport { PublisherListComponent } from './Components/publisher-list/publisher-list.component';\nimport { PublisherRequestsComponent } from './Components/publisher-requests/publisher-requests.component';\nimport { ManageAdminsComponent } from './Components/manage-admins/manage-admins.component';\nimport { AddAdminComponent } from './Components/add-admin/add-admin.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    DashboardComponent,\n    PublisherListComponent,\n    PublisherRequestsComponent,\n    ManageAdminsComponent,\n    AddAdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot() \n\n  ],\n  providers: [TestingService , AuthenticationService , ValidationsService , {provide: LocationStrategy, useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}